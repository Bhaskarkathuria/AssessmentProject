Authentication Middleware Documentation
Overview
This documentation outlines the authentication middleware used in an Express.js application. The middleware is responsible for verifying the validity of JSON Web Tokens (JWT) included in the request headers. If the token is valid, it retrieves user information from the database and attaches it to the request object for further processing.

Middleware
1. Authentication Middleware
File: authenticationMiddleware.js
Description: Verifies the JWT included in the request header and retrieves user information from the database.

Functionality:

Extracts the JWT from the Authorization header.
Verifies the JWT using a predefined secret key (my_secret_key in this case).
Retrieves user information from the database based on the user ID stored in the JWT.
Attaches the user information to the request object for subsequent route handlers.
Usage:

Include this middleware in routes that require user authentication.

Dependencies
jsonwebtoken: A library for generating and verifying JSON Web Tokens (JWT).
sequelize: A promise-based Node.js ORM for PostgreSQL, MySQL, SQLite, and MSSQL.

Setup
Install dependencies
Ensure that the my_secret_key used for JWT verification is kept secure.

Integrate the authentication middleware into your Express.js routes where user authentication is required.

Notes
Adjust the secret key (my_secret_key) for JWT based on your security requirements.
Customize error handling and responses according to your project specifications.